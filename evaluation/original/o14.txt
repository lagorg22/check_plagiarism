import random
import time

def generate_random_string(length):
    characters = "abcdefghijklmnopqrstuvwxyz0123456789"
    return ''.join(random.choice(characters) for _ in range(length))

def process_data(data_list):
    processed = []
    for item in data_list:
        if isinstance(item, int):
            processed.append(item * 2)
        elif isinstance(item, str):
            processed.append(item.upper())
        elif isinstance(item, list):
            processed.append(sorted(item))
        else:
            processed.append(str(item))
    return processed

def slow_function(n):
    time.sleep(random.uniform(0.1, 0.5))
    return n * n

if __name__ == "__main__":
    random_numbers = [random.randint(1, 100) for _ in range(15)]
    random_strings = [generate_random_string(random.randint(5, 10)) for _ in range(10)]
    mixed_data = random_numbers + random_strings + [[random.randint(1, 10) for _ in range(5)] for _ in range(5)] + [True, None, 3.14]

    print("Original Mixed Data:", mixed_data)
    processed_data = process_data(mixed_data)
    print("\nProcessed Data:", processed_data)

    squared_slowly = [slow_function(i) for i in range(5)]
    print("\nSquared Slowly:", squared_slowly)

    random.shuffle(random_numbers)
    print("\nShuffled Numbers:", random_numbers)

    some_dict = {generate_random_string(3): random.random() for _ in range(7)}
    print("\nRandom Dictionary:", some_dict)

    for i in range(3):
        print(f"\nIteration {i+1}:")
        random_float = random.uniform(0, 1)
        print(f"  Random Float: {random_float}")
        if random_float > 0.7:
            print("  High random float!")
        else:
            print("  Not so high.")

    try:
        index = random.randint(-5, len(random_numbers) + 5)
        print(f"\nTrying to access index {index} of random_numbers:")
        print(random_numbers[index])
    except IndexError:
        print("  Caught an IndexError!")

    print("\nEnd of random code.")